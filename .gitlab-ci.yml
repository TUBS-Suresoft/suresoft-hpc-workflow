stages:
  - build
  - simulation
  - test
  - trigger
  - benchmark

###############################################################################
# 1. builds the singularity container using a docker container
# Needs a priviliged gitlab runner.
# Input: Containers/rockylinux9-mpich.def
# Output: Containers/rockylinux9-mpich.sif
###############################################################################
build-singularity-mpich-hybrid:
  image:
    name: quay.io/singularity/singularity:v3.10.4
    entrypoint: [""]

  stage: build

  variables:
    SINGULARITY_IMAGE: "Containers/rockylinux9-mpich-hybrid.sif"

  tags:
    - linux
    - privileged

  artifacts:
    expire_in: 1 hrs
    paths:
      - $SINGULARITY_IMAGE

  cache:
    key:
      files:
        - Containers/rockylinux9-mpich-hybrid.def
    paths:
      - $SINGULARITY_IMAGE

  script:
    - |
      if [[ -f $SINGULARITY_IMAGE ]]; then
        echo "Cached version of $SINGULARITY_IMAGE used. Clear cache to force rebuild."
        exit 0
      fi
    - singularity build "$SINGULARITY_IMAGE" "Containers/rockylinux9-mpich-hybrid.def"

###############################################################################
# 1. builds the singularity container using a docker container
# Needs a priviliged gitlab runner.
# Input: Containers/rockylinux9-mpich.def
# Output: Containers/rockylinux9-mpich.sif
###############################################################################
build-singularity-openmpi-hybrid:
  image:
    name: quay.io/singularity/singularity:v3.10.4
    entrypoint: [""]

  stage: build

  tags:
    - linux
    - privileged

  variables:
    SINGULARITY_IMAGE: "Containers/rockylinux9-openmpi-hybrid.sif"

  artifacts:
    expire_in: 1 hrs
    paths:
      - $SINGULARITY_IMAGE

  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - $SINGULARITY_IMAGE

  script:
    - |
      if [[ -f $SINGULARITY_IMAGE ]]; then
        echo "Cached version of $SINGULARITY_IMAGE used. Clear cache to force rebuild."
        exit 0
      fi
    - singularity build "$SINGULARITY_IMAGE" "Containers/rockylinux9-openmpi-hybrid.def"

###############################################################################
# 1. builds the singularity container using a docker container
# Needs a priviliged gitlab runner.
# Input: Containers/rockylinux9-mpich.def
# Output: Containers/rockylinux9-mpich.sif
###############################################################################
build-singularity-mpich-bind:
  image:
    name: quay.io/singularity/singularity:v3.10.4
    entrypoint: [""]

  stage: build

  tags:
    - linux
    - privileged

  variables:
    SINGULARITY_IMAGE: "Containers/rockylinux9-mpich-bind.sif"

  artifacts:
    expire_in: 1 hrs
    paths:
      - $SINGULARITY_IMAGE

  cache:
    key:
      files:
        - Containers/rockylinux9-mpich-bind.def
    paths:
      - Containers/

  script:
    - |
      if [[ -f $SINGULARITY_IMAGE ]]; then
        echo "Cached version of $SINGULARITY_IMAGE used. Clear cache to force rebuild."
        exit 0
      fi
    - singularity build "$SINGULARITY_IMAGE" "Containers/rockylinux9-mpich-bind.def"

###############################################################################
# 2. runs the container on the hpc cluster using hpc-rocket
# rocket.yml used the configuration file rocket.yml, copies the defined data
# to the cluster, submits a slurm job and copies data back
# Output: result data located in results/
###############################################################################
run-hpc-cluster-mpich-bind:
  image: python:3.10

  stage: simulation

  needs: ["build-singularity-mpich-bind"]

  before_script:
    - pip install hpc-rocket==0.4.0

  script:
    - hpc-rocket launch example/rocket-mpich-bind.yml |& tee hpcrocket.log
    - hpc-rocket watch example/rocket-mpich-bind.yml $(python parsejobid.py hpcrocket.log)
    - hpc-rocket finalize example/rocket-mpich-bind.yml
    - cat results/laplace.out

  after_script:
    - hpc-rocket cancel example/rocket-mpich-bind.yml $(python parsejobid.py hpcrocket.log)

  artifacts:
    expire_in: 1 hrs
    paths:
      - results/

###############################################################################
# 3. runs a regression data using fieldcompare
# Fieldcompare compares the in the last job produced data from results/
# with a set of reference files located in reference_data/
###############################################################################
regression-test:
  image: python:3.10

  stage: test

  needs: ["run-hpc-cluster-mpich-bind"]

  before_script:
    - pip install "fieldcompare[all]"

  script:
    - fieldcompare file results/TemperatureField.avs reference_data/highres-test.avs

###############################################################################
# Manually trigger the benchmark child pipeline
###############################################################################
create-benchmark-ci:
  image: python:3.10
  stage: benchmark

  before_script:
    - pip install -r jobgeneration/requirements.txt

  script:
    - python3 -m jobgeneration benchmark

  artifacts:
    expire_in: 1 week
    paths:
      - generated/
  when: manual
  needs:
    [
      build-singularity-mpich-hybrid,
      build-singularity-mpich-bind,
      build-singularity-openmpi-hybrid,
    ]

trigger:benchmark:
  stage: benchmark
  needs:
    - create-benchmark-ci
  trigger:
    include:
      - artifact: generated/benchmark-gitlab-ci.yml
        job: create-benchmark-ci
    strategy: depend
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID


##
create-test-ci:
  image: python:3.10
  stage: test

  before_script:
    - pip install -r jobgeneration/requirements.txt

  script:
    - python3 -m jobgeneration test

  artifacts:
    expire_in: 1 week
    paths:
      - generated/
  when: manual
  needs: [build-singularity-mpich-bind]


trigger-test-ci:
  stage: test
  needs:
    - create-test-ci
  trigger:
    include:
      - artifact: generated/tests-ci.yml
        job: create-test-ci
    strategy: depend
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
